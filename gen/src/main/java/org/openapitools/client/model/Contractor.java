/*
 * API системы \"Народный контроль\"
 *  <h2>Приложение Народный контроль</h2> <p><strong>Основная цель</strong>: контроль за состоянием сфер жизнедеятельности города по отраслям:</p> <ul> <li>общественный транспорт (мин.транс)</li> <li>состояние дорог и прилегающий территорий (мин.транс)</li> <li>состояние благоустройства города (мин. хоз)</li> <li>аварийные участки города, прорывы водо- тепло- коммуникаций, обрывы электро коммуникаций  (жэк)</li> <li>постройки в аварийном состоянии (мин. Хоз)</li> <li>уборка территории и вывоз отходов (мин. Хоз)</li> <li>некачественные товары (потреб контроль)</li> <li>скопление животных (мин. Хоз)</li> <li>последствия стихийных бедствий  (мин. Хоз,  мчс)</li> <li>последствие военных действий (мчс, военные, мин. Транс)</li> <li>проявления вандализмам (в т.ч. размещение рекламы в неположенном месте)</li> <li>состояние фортификационных сооружений (мчс)</li> <li>состояние рабочего места (проф. Комиссии)</li> <li>регулярное скопление криминальных (или асоциальных) элементов общества или проявление аморального поведения в общественных местах (мин. Хоз)</li> <li>нарушение ПДД участниками дорожного движения (мвд)</li> <li>также могут быть заявки без категории</li> <li>инициативы граждан - полезные нововведения от граждан</li> <li>заявки на утерянные или найденные вещи</li> </ul> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: exxxar@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ContractorSchedule;
import org.openapitools.client.model.ProblemCategory;

/**
 * Contractor
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T13:03:19.227601400+03:00[Europe/Moscow]")
public class Contractor {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_MNEMONIC_NAME = "mnemonic_name";
  @SerializedName(SERIALIZED_NAME_MNEMONIC_NAME)
  private String mnemonicName;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_RESPONSIBLE_PERSON = "responsible_person";
  @SerializedName(SERIALIZED_NAME_RESPONSIBLE_PERSON)
  private String responsiblePerson;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_HASH_TAG = "hash_tag";
  @SerializedName(SERIALIZED_NAME_HASH_TAG)
  private String hashTag;

  public static final String SERIALIZED_NAME_CONTACT_PHONE = "contact_phone";
  @SerializedName(SERIALIZED_NAME_CONTACT_PHONE)
  private String contactPhone;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL = "contact_email";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL)
  private String contactEmail;

  public static final String SERIALIZED_NAME_PRE_CONTROLLER_EMAIL = "pre_controller_email";
  @SerializedName(SERIALIZED_NAME_PRE_CONTROLLER_EMAIL)
  private String preControllerEmail;

  public static final String SERIALIZED_NAME_TELEGRAM_CHAT_ID = "telegram_chat_id";
  @SerializedName(SERIALIZED_NAME_TELEGRAM_CHAT_ID)
  private String telegramChatId;

  public static final String SERIALIZED_NAME_PUBLIC_WEBSITE = "public_website";
  @SerializedName(SERIALIZED_NAME_PUBLIC_WEBSITE)
  private String publicWebsite;

  public static final String SERIALIZED_NAME_MORE_INFO = "more_info";
  @SerializedName(SERIALIZED_NAME_MORE_INFO)
  private String moreInfo;

  /**
   * Выбор типа организации:  * &#x60;EXECUTIVE&#x60; - исполнительные органы  * &#x60;SUPERVISING&#x60; - контролирующие органы 
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    EXECUTIVE("EXECUTIVE"),
    
    SUPERVISING("SUPERVISING");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type = TypeEnum.EXECUTIVE;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private List<ContractorSchedule> schedule = null;

  public static final String SERIALIZED_NAME_PROBLEM_CATEGORIES = "problem_categories";
  @SerializedName(SERIALIZED_NAME_PROBLEM_CATEGORIES)
  private List<ProblemCategory> problemCategories = null;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive = false;

  public static final String SERIALIZED_NAME_GENERATE_DAILY_REPORT = "generate_daily_report";
  @SerializedName(SERIALIZED_NAME_GENERATE_DAILY_REPORT)
  private Boolean generateDailyReport = false;

  public static final String SERIALIZED_NAME_NEED_INFORM_BY_EMAIL = "need_inform_by_email";
  @SerializedName(SERIALIZED_NAME_NEED_INFORM_BY_EMAIL)
  private Boolean needInformByEmail = false;

  public static final String SERIALIZED_NAME_NEED_INFORM_BY_SMS = "need_inform_by_sms";
  @SerializedName(SERIALIZED_NAME_NEED_INFORM_BY_SMS)
  private Boolean needInformBySms = false;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private String deletedAt = "null";

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt = "null";

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt = "null";


  public Contractor id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public Contractor mnemonicName(String mnemonicName) {
    
    this.mnemonicName = mnemonicName;
    return this;
  }

   /**
   * Мнемоническое имя
   * @return mnemonicName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mvd", value = "Мнемоническое имя")

  public String getMnemonicName() {
    return mnemonicName;
  }


  public void setMnemonicName(String mnemonicName) {
    this.mnemonicName = mnemonicName;
  }


  public Contractor title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Название исполнительного органа
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Министерство внутренних дел", value = "Название исполнительного органа")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public Contractor description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Описание исполнительного органа
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Министерство внутренних дел - контролирующий орган", value = "Описание исполнительного органа")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Contractor responsiblePerson(String responsiblePerson) {
    
    this.responsiblePerson = responsiblePerson;
    return this;
  }

   /**
   * Ответственное лицо от органа исполнения  проверки
   * @return responsiblePerson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Петров В.В., старший лейтинант", value = "Ответственное лицо от органа исполнения  проверки")

  public String getResponsiblePerson() {
    return responsiblePerson;
  }


  public void setResponsiblePerson(String responsiblePerson) {
    this.responsiblePerson = responsiblePerson;
  }


  public Contractor image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Изображение (аватар исполнительного органа)
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "avatar.jpg", value = "Изображение (аватар исполнительного органа)")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public Contractor hashTag(String hashTag) {
    
    this.hashTag = hashTag;
    return this;
  }

   /**
   * Get hashTag
   * @return hashTag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "#мвд", value = "")

  public String getHashTag() {
    return hashTag;
  }


  public void setHashTag(String hashTag) {
    this.hashTag = hashTag;
  }


  public Contractor contactPhone(String contactPhone) {
    
    this.contactPhone = contactPhone;
    return this;
  }

   /**
   * Get contactPhone
   * @return contactPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0713333333", value = "")

  public String getContactPhone() {
    return contactPhone;
  }


  public void setContactPhone(String contactPhone) {
    this.contactPhone = contactPhone;
  }


  public Contractor contactEmail(String contactEmail) {
    
    this.contactEmail = contactEmail;
    return this;
  }

   /**
   * Get contactEmail
   * @return contactEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mvd@mvd.com", value = "")

  public String getContactEmail() {
    return contactEmail;
  }


  public void setContactEmail(String contactEmail) {
    this.contactEmail = contactEmail;
  }


  public Contractor preControllerEmail(String preControllerEmail) {
    
    this.preControllerEmail = preControllerEmail;
    return this;
  }

   /**
   * электронная почта отвественного министерства
   * @return preControllerEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "mvd@mvd.com", value = "электронная почта отвественного министерства")

  public String getPreControllerEmail() {
    return preControllerEmail;
  }


  public void setPreControllerEmail(String preControllerEmail) {
    this.preControllerEmail = preControllerEmail;
  }


  public Contractor telegramChatId(String telegramChatId) {
    
    this.telegramChatId = telegramChatId;
    return this;
  }

   /**
   * идентификатор телеграм канала исполнительного органа
   * @return telegramChatId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "-10000000001", value = "идентификатор телеграм канала исполнительного органа")

  public String getTelegramChatId() {
    return telegramChatId;
  }


  public void setTelegramChatId(String telegramChatId) {
    this.telegramChatId = telegramChatId;
  }


  public Contractor publicWebsite(String publicWebsite) {
    
    this.publicWebsite = publicWebsite;
    return this;
  }

   /**
   * Ссылка на веб-ресурс службы
   * @return publicWebsite
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://mvd.com", value = "Ссылка на веб-ресурс службы")

  public String getPublicWebsite() {
    return publicWebsite;
  }


  public void setPublicWebsite(String publicWebsite) {
    this.publicWebsite = publicWebsite;
  }


  public Contractor moreInfo(String moreInfo) {
    
    this.moreInfo = moreInfo;
    return this;
  }

   /**
   * дополнительная информация о контролирующем \\ исполнительном органе
   * @return moreInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "На службе добра", value = "дополнительная информация о контролирующем \\ исполнительном органе")

  public String getMoreInfo() {
    return moreInfo;
  }


  public void setMoreInfo(String moreInfo) {
    this.moreInfo = moreInfo;
  }


  public Contractor type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Выбор типа организации:  * &#x60;EXECUTIVE&#x60; - исполнительные органы  * &#x60;SUPERVISING&#x60; - контролирующие органы 
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Выбор типа организации:  * `EXECUTIVE` - исполнительные органы  * `SUPERVISING` - контролирующие органы ")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public Contractor schedule(List<ContractorSchedule> schedule) {
    
    this.schedule = schedule;
    return this;
  }

  public Contractor addScheduleItem(ContractorSchedule scheduleItem) {
    if (this.schedule == null) {
      this.schedule = new ArrayList<ContractorSchedule>();
    }
    this.schedule.add(scheduleItem);
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ContractorSchedule> getSchedule() {
    return schedule;
  }


  public void setSchedule(List<ContractorSchedule> schedule) {
    this.schedule = schedule;
  }


  public Contractor problemCategories(List<ProblemCategory> problemCategories) {
    
    this.problemCategories = problemCategories;
    return this;
  }

  public Contractor addProblemCategoriesItem(ProblemCategory problemCategoriesItem) {
    if (this.problemCategories == null) {
      this.problemCategories = new ArrayList<ProblemCategory>();
    }
    this.problemCategories.add(problemCategoriesItem);
    return this;
  }

   /**
   * Get problemCategories
   * @return problemCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProblemCategory> getProblemCategories() {
    return problemCategories;
  }


  public void setProblemCategories(List<ProblemCategory> problemCategories) {
    this.problemCategories = problemCategories;
  }


  public Contractor isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Статус видимости организации в общем списке
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Статус видимости организации в общем списке")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public Contractor generateDailyReport(Boolean generateDailyReport) {
    
    this.generateDailyReport = generateDailyReport;
    return this;
  }

   /**
   * Генерировать дневные отчеты
   * @return generateDailyReport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Генерировать дневные отчеты")

  public Boolean getGenerateDailyReport() {
    return generateDailyReport;
  }


  public void setGenerateDailyReport(Boolean generateDailyReport) {
    this.generateDailyReport = generateDailyReport;
  }


  public Contractor needInformByEmail(Boolean needInformByEmail) {
    
    this.needInformByEmail = needInformByEmail;
    return this;
  }

   /**
   * информировать по электронной почте
   * @return needInformByEmail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "информировать по электронной почте")

  public Boolean getNeedInformByEmail() {
    return needInformByEmail;
  }


  public void setNeedInformByEmail(Boolean needInformByEmail) {
    this.needInformByEmail = needInformByEmail;
  }


  public Contractor needInformBySms(Boolean needInformBySms) {
    
    this.needInformBySms = needInformBySms;
    return this;
  }

   /**
   * информировать по sms
   * @return needInformBySms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "информировать по sms")

  public Boolean getNeedInformBySms() {
    return needInformBySms;
  }


  public void setNeedInformBySms(Boolean needInformBySms) {
    this.needInformBySms = needInformBySms;
  }


  public Contractor deletedAt(String deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 12:00:00", value = "")

  public String getDeletedAt() {
    return deletedAt;
  }


  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }


  public Contractor createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 12:00:00", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public Contractor updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 12:00:00", value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contractor contractor = (Contractor) o;
    return Objects.equals(this.id, contractor.id) &&
        Objects.equals(this.mnemonicName, contractor.mnemonicName) &&
        Objects.equals(this.title, contractor.title) &&
        Objects.equals(this.description, contractor.description) &&
        Objects.equals(this.responsiblePerson, contractor.responsiblePerson) &&
        Objects.equals(this.image, contractor.image) &&
        Objects.equals(this.hashTag, contractor.hashTag) &&
        Objects.equals(this.contactPhone, contractor.contactPhone) &&
        Objects.equals(this.contactEmail, contractor.contactEmail) &&
        Objects.equals(this.preControllerEmail, contractor.preControllerEmail) &&
        Objects.equals(this.telegramChatId, contractor.telegramChatId) &&
        Objects.equals(this.publicWebsite, contractor.publicWebsite) &&
        Objects.equals(this.moreInfo, contractor.moreInfo) &&
        Objects.equals(this.type, contractor.type) &&
        Objects.equals(this.schedule, contractor.schedule) &&
        Objects.equals(this.problemCategories, contractor.problemCategories) &&
        Objects.equals(this.isActive, contractor.isActive) &&
        Objects.equals(this.generateDailyReport, contractor.generateDailyReport) &&
        Objects.equals(this.needInformByEmail, contractor.needInformByEmail) &&
        Objects.equals(this.needInformBySms, contractor.needInformBySms) &&
        Objects.equals(this.deletedAt, contractor.deletedAt) &&
        Objects.equals(this.createdAt, contractor.createdAt) &&
        Objects.equals(this.updatedAt, contractor.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, mnemonicName, title, description, responsiblePerson, image, hashTag, contactPhone, contactEmail, preControllerEmail, telegramChatId, publicWebsite, moreInfo, type, schedule, problemCategories, isActive, generateDailyReport, needInformByEmail, needInformBySms, deletedAt, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contractor {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mnemonicName: ").append(toIndentedString(mnemonicName)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    responsiblePerson: ").append(toIndentedString(responsiblePerson)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    hashTag: ").append(toIndentedString(hashTag)).append("\n");
    sb.append("    contactPhone: ").append(toIndentedString(contactPhone)).append("\n");
    sb.append("    contactEmail: ").append(toIndentedString(contactEmail)).append("\n");
    sb.append("    preControllerEmail: ").append(toIndentedString(preControllerEmail)).append("\n");
    sb.append("    telegramChatId: ").append(toIndentedString(telegramChatId)).append("\n");
    sb.append("    publicWebsite: ").append(toIndentedString(publicWebsite)).append("\n");
    sb.append("    moreInfo: ").append(toIndentedString(moreInfo)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    problemCategories: ").append(toIndentedString(problemCategories)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    generateDailyReport: ").append(toIndentedString(generateDailyReport)).append("\n");
    sb.append("    needInformByEmail: ").append(toIndentedString(needInformByEmail)).append("\n");
    sb.append("    needInformBySms: ").append(toIndentedString(needInformBySms)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

