/*
 * API системы \"Народный контроль\"
 *  <h2>Приложение Народный контроль</h2> <p><strong>Основная цель</strong>: контроль за состоянием сфер жизнедеятельности города по отраслям:</p> <ul> <li>общественный транспорт (мин.транс)</li> <li>состояние дорог и прилегающий территорий (мин.транс)</li> <li>состояние благоустройства города (мин. хоз)</li> <li>аварийные участки города, прорывы водо- тепло- коммуникаций, обрывы электро коммуникаций  (жэк)</li> <li>постройки в аварийном состоянии (мин. Хоз)</li> <li>уборка территории и вывоз отходов (мин. Хоз)</li> <li>некачественные товары (потреб контроль)</li> <li>скопление животных (мин. Хоз)</li> <li>последствия стихийных бедствий  (мин. Хоз,  мчс)</li> <li>последствие военных действий (мчс, военные, мин. Транс)</li> <li>проявления вандализмам (в т.ч. размещение рекламы в неположенном месте)</li> <li>состояние фортификационных сооружений (мчс)</li> <li>состояние рабочего места (проф. Комиссии)</li> <li>регулярное скопление криминальных (или асоциальных) элементов общества или проявление аморального поведения в общественных местах (мин. Хоз)</li> <li>нарушение ПДД участниками дорожного движения (мвд)</li> <li>также могут быть заявки без категории</li> <li>инициативы граждан - полезные нововведения от граждан</li> <li>заявки на утерянные или найденные вещи</li> </ul> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: exxxar@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ProblemCategoryForm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T13:03:19.227601400+03:00[Europe/Moscow]")
public class ProblemCategoryForm {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_MNEMONIC_NAME = "mnemonic_name";
  @SerializedName(SERIALIZED_NAME_MNEMONIC_NAME)
  private String mnemonicName;

  public static final String SERIALIZED_NAME_HASH_TAG = "hash_tag";
  @SerializedName(SERIALIZED_NAME_HASH_TAG)
  private String hashTag;

  public static final String SERIALIZED_NAME_ICON = "icon";
  @SerializedName(SERIALIZED_NAME_ICON)
  private String icon;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private Integer rating;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "is_active";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_IS_VISIBLE = "is_visible";
  @SerializedName(SERIALIZED_NAME_IS_VISIBLE)
  private Boolean isVisible;


  public ProblemCategoryForm title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(example = "Яма на дороге", required = true, value = "")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ProblemCategoryForm mnemonicName(String mnemonicName) {
    
    this.mnemonicName = mnemonicName;
    return this;
  }

   /**
   * Get mnemonicName
   * @return mnemonicName
  **/
  @ApiModelProperty(example = "yama_na_doroge", required = true, value = "")

  public String getMnemonicName() {
    return mnemonicName;
  }


  public void setMnemonicName(String mnemonicName) {
    this.mnemonicName = mnemonicName;
  }


  public ProblemCategoryForm hashTag(String hashTag) {
    
    this.hashTag = hashTag;
    return this;
  }

   /**
   * Get hashTag
   * @return hashTag
  **/
  @ApiModelProperty(example = "#дорожное_движение", required = true, value = "")

  public String getHashTag() {
    return hashTag;
  }


  public void setHashTag(String hashTag) {
    this.hashTag = hashTag;
  }


  public ProblemCategoryForm icon(String icon) {
    
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @ApiModelProperty(example = "https://test.com/123.jpg", required = true, value = "")

  public String getIcon() {
    return icon;
  }


  public void setIcon(String icon) {
    this.icon = icon;
  }


  public ProblemCategoryForm rating(Integer rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * Приоритетный рейтинг категории
   * @return rating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "Приоритетный рейтинг категории")

  public Integer getRating() {
    return rating;
  }


  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public ProblemCategoryForm isActive(Boolean isActive) {
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Доступность раздела
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Доступность раздела")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }


  public ProblemCategoryForm isVisible(Boolean isVisible) {
    
    this.isVisible = isVisible;
    return this;
  }

   /**
   * Видимость раздела в общей выдаче
   * @return isVisible
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Видимость раздела в общей выдаче")

  public Boolean getIsVisible() {
    return isVisible;
  }


  public void setIsVisible(Boolean isVisible) {
    this.isVisible = isVisible;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProblemCategoryForm problemCategoryForm = (ProblemCategoryForm) o;
    return Objects.equals(this.title, problemCategoryForm.title) &&
        Objects.equals(this.mnemonicName, problemCategoryForm.mnemonicName) &&
        Objects.equals(this.hashTag, problemCategoryForm.hashTag) &&
        Objects.equals(this.icon, problemCategoryForm.icon) &&
        Objects.equals(this.rating, problemCategoryForm.rating) &&
        Objects.equals(this.isActive, problemCategoryForm.isActive) &&
        Objects.equals(this.isVisible, problemCategoryForm.isVisible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, mnemonicName, hashTag, icon, rating, isActive, isVisible);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProblemCategoryForm {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    mnemonicName: ").append(toIndentedString(mnemonicName)).append("\n");
    sb.append("    hashTag: ").append(toIndentedString(hashTag)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isVisible: ").append(toIndentedString(isVisible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

