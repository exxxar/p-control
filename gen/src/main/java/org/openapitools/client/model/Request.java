/*
 * API системы \"Народный контроль\"
 *  <h2>Приложение Народный контроль</h2> <p><strong>Основная цель</strong>: контроль за состоянием сфер жизнедеятельности города по отраслям:</p> <ul> <li>общественный транспорт (мин.транс)</li> <li>состояние дорог и прилегающий территорий (мин.транс)</li> <li>состояние благоустройства города (мин. хоз)</li> <li>аварийные участки города, прорывы водо- тепло- коммуникаций, обрывы электро коммуникаций  (жэк)</li> <li>постройки в аварийном состоянии (мин. Хоз)</li> <li>уборка территории и вывоз отходов (мин. Хоз)</li> <li>некачественные товары (потреб контроль)</li> <li>скопление животных (мин. Хоз)</li> <li>последствия стихийных бедствий  (мин. Хоз,  мчс)</li> <li>последствие военных действий (мчс, военные, мин. Транс)</li> <li>проявления вандализмам (в т.ч. размещение рекламы в неположенном месте)</li> <li>состояние фортификационных сооружений (мчс)</li> <li>состояние рабочего места (проф. Комиссии)</li> <li>регулярное скопление криминальных (или асоциальных) элементов общества или проявление аморального поведения в общественных местах (мин. Хоз)</li> <li>нарушение ПДД участниками дорожного движения (мвд)</li> <li>также могут быть заявки без категории</li> <li>инициативы граждан - полезные нововведения от граждан</li> <li>заявки на утерянные или найденные вещи</li> </ul> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: exxxar@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.MediaContent;
import org.openapitools.client.model.ProblemCategory;
import org.openapitools.client.model.RequestStoredProfileData;

/**
 * Request
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-11T13:03:19.227601400+03:00[Europe/Moscow]")
public class Request {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_PARENT_REQUEST_ID = "parent_request_id";
  @SerializedName(SERIALIZED_NAME_PARENT_REQUEST_ID)
  private Long parentRequestId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_PROBLEM_CATEGORIES = "problem_categories";
  @SerializedName(SERIALIZED_NAME_PROBLEM_CATEGORIES)
  private List<ProblemCategory> problemCategories = null;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location = "null";

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  private BigDecimal latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  private BigDecimal longitude;

  public static final String SERIALIZED_NAME_BASE_RATING = "base_rating";
  @SerializedName(SERIALIZED_NAME_BASE_RATING)
  private Integer baseRating = 0;

  public static final String SERIALIZED_NAME_RATING = "rating";
  @SerializedName(SERIALIZED_NAME_RATING)
  private Integer rating;

  /**
   * Тип заявки:  * &#x60;IN PROCESSING&#x60; - новая заявка  * &#x60;IN CONSIDERATION&#x60; - заявка на рассмотрении  * &#x60;IN EXECUTION&#x60; - заявка выполняется  * &#x60;IN EXECUTION CHECK&#x60; - проверка выполнения заявки  * &#x60;COMPLETED&#x60; - выполненная заявка  * &#x60;ARCHIVED&#x60; - заявка находится в архиве 
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    IN_PROCESSING("IN PROCESSING"),
    
    IN_CONSIDERATION("IN CONSIDERATION"),
    
    IN_EXECUTION("IN EXECUTION"),
    
    IN_EXECUTION_CHECK("IN EXECUTION CHECK"),
    
    COMPLETED("COMPLETED"),
    
    ARCHIVED("ARCHIVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status = StatusEnum.IN_PROCESSING;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<MediaContent> attachments = null;

  public static final String SERIALIZED_NAME_STORED_PROFILE_DATA = "stored_profile_data";
  @SerializedName(SERIALIZED_NAME_STORED_PROFILE_DATA)
  private RequestStoredProfileData storedProfileData;

  public static final String SERIALIZED_NAME_REQUEST_CONSIDERATION_AT = "request_consideration_at";
  @SerializedName(SERIALIZED_NAME_REQUEST_CONSIDERATION_AT)
  private String requestConsiderationAt;

  public static final String SERIALIZED_NAME_BEGIN_REQUEST_EXECUTION_AT = "begin_request_execution_at";
  @SerializedName(SERIALIZED_NAME_BEGIN_REQUEST_EXECUTION_AT)
  private String beginRequestExecutionAt;

  public static final String SERIALIZED_NAME_COMPLETE_REQUEST_EXECUTION_AT = "complete_request_execution_at";
  @SerializedName(SERIALIZED_NAME_COMPLETE_REQUEST_EXECUTION_AT)
  private String completeRequestExecutionAt;

  public static final String SERIALIZED_NAME_REQUEST_STATUS_CHECKED_AT = "request_status_checked_at";
  @SerializedName(SERIALIZED_NAME_REQUEST_STATUS_CHECKED_AT)
  private String requestStatusCheckedAt;

  public static final String SERIALIZED_NAME_IS_MODERATED = "is_moderated";
  @SerializedName(SERIALIZED_NAME_IS_MODERATED)
  private Boolean isModerated = true;

  public static final String SERIALIZED_NAME_MODERATOR_ID = "moderator_id";
  @SerializedName(SERIALIZED_NAME_MODERATOR_ID)
  private Long moderatorId;

  public static final String SERIALIZED_NAME_DELETED_AT = "deleted_at";
  @SerializedName(SERIALIZED_NAME_DELETED_AT)
  private String deletedAt = "null";

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt = "null";

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt = "null";


  public Request id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public Request parentRequestId(Long parentRequestId) {
    
    this.parentRequestId = parentRequestId;
    return this;
  }

   /**
   * идентификатор более ранней заявки по схожей проблеме
   * @return parentRequestId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "идентификатор более ранней заявки по схожей проблеме")

  public Long getParentRequestId() {
    return parentRequestId;
  }


  public void setParentRequestId(Long parentRequestId) {
    this.parentRequestId = parentRequestId;
  }


  public Request description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Бродячие собаки", value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public Request problemCategories(List<ProblemCategory> problemCategories) {
    
    this.problemCategories = problemCategories;
    return this;
  }

  public Request addProblemCategoriesItem(ProblemCategory problemCategoriesItem) {
    if (this.problemCategories == null) {
      this.problemCategories = new ArrayList<ProblemCategory>();
    }
    this.problemCategories.add(problemCategoriesItem);
    return this;
  }

   /**
   * Get problemCategories
   * @return problemCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProblemCategory> getProblemCategories() {
    return problemCategories;
  }


  public void setProblemCategories(List<ProblemCategory> problemCategories) {
    this.problemCategories = problemCategories;
  }


  public Request location(String location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "г. Донецк, пр. Труда, 23", value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    this.location = location;
  }


  public Request latitude(BigDecimal latitude) {
    
    this.latitude = latitude;
    return this;
  }

   /**
   * Get latitude
   * @return latitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "23.2334444", value = "")

  public BigDecimal getLatitude() {
    return latitude;
  }


  public void setLatitude(BigDecimal latitude) {
    this.latitude = latitude;
  }


  public Request longitude(BigDecimal longitude) {
    
    this.longitude = longitude;
    return this;
  }

   /**
   * Get longitude
   * @return longitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "45.7889111", value = "")

  public BigDecimal getLongitude() {
    return longitude;
  }


  public void setLongitude(BigDecimal longitude) {
    this.longitude = longitude;
  }


  public Request baseRating(Integer baseRating) {
    
    this.baseRating = baseRating;
    return this;
  }

   /**
   * фиксированный рейтинг заявки, указывается администратором для принудительного повышения
   * @return baseRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "613", value = "фиксированный рейтинг заявки, указывается администратором для принудительного повышения")

  public Integer getBaseRating() {
    return baseRating;
  }


  public void setBaseRating(Integer baseRating) {
    this.baseRating = baseRating;
  }


  public Request rating(Integer rating) {
    
    this.rating = rating;
    return this;
  }

   /**
   * суммарный рейтинг заявки и всех смежных с ней заявок
   * @return rating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "613", value = "суммарный рейтинг заявки и всех смежных с ней заявок")

  public Integer getRating() {
    return rating;
  }


  public void setRating(Integer rating) {
    this.rating = rating;
  }


  public Request status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Тип заявки:  * &#x60;IN PROCESSING&#x60; - новая заявка  * &#x60;IN CONSIDERATION&#x60; - заявка на рассмотрении  * &#x60;IN EXECUTION&#x60; - заявка выполняется  * &#x60;IN EXECUTION CHECK&#x60; - проверка выполнения заявки  * &#x60;COMPLETED&#x60; - выполненная заявка  * &#x60;ARCHIVED&#x60; - заявка находится в архиве 
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Тип заявки:  * `IN PROCESSING` - новая заявка  * `IN CONSIDERATION` - заявка на рассмотрении  * `IN EXECUTION` - заявка выполняется  * `IN EXECUTION CHECK` - проверка выполнения заявки  * `COMPLETED` - выполненная заявка  * `ARCHIVED` - заявка находится в архиве ")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Request attachments(List<MediaContent> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public Request addAttachmentsItem(MediaContent attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<MediaContent>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MediaContent> getAttachments() {
    return attachments;
  }


  public void setAttachments(List<MediaContent> attachments) {
    this.attachments = attachments;
  }


  public Request storedProfileData(RequestStoredProfileData storedProfileData) {
    
    this.storedProfileData = storedProfileData;
    return this;
  }

   /**
   * Get storedProfileData
   * @return storedProfileData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public RequestStoredProfileData getStoredProfileData() {
    return storedProfileData;
  }


  public void setStoredProfileData(RequestStoredProfileData storedProfileData) {
    this.storedProfileData = storedProfileData;
  }


  public Request requestConsiderationAt(String requestConsiderationAt) {
    
    this.requestConsiderationAt = requestConsiderationAt;
    return this;
  }

   /**
   * дата начала рассмотрения заявки
   * @return requestConsiderationAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-02-03 13:00:00", value = "дата начала рассмотрения заявки")

  public String getRequestConsiderationAt() {
    return requestConsiderationAt;
  }


  public void setRequestConsiderationAt(String requestConsiderationAt) {
    this.requestConsiderationAt = requestConsiderationAt;
  }


  public Request beginRequestExecutionAt(String beginRequestExecutionAt) {
    
    this.beginRequestExecutionAt = beginRequestExecutionAt;
    return this;
  }

   /**
   * дата начала выполнения работ по заявке
   * @return beginRequestExecutionAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-02-03 13:00:00", value = "дата начала выполнения работ по заявке")

  public String getBeginRequestExecutionAt() {
    return beginRequestExecutionAt;
  }


  public void setBeginRequestExecutionAt(String beginRequestExecutionAt) {
    this.beginRequestExecutionAt = beginRequestExecutionAt;
  }


  public Request completeRequestExecutionAt(String completeRequestExecutionAt) {
    
    this.completeRequestExecutionAt = completeRequestExecutionAt;
    return this;
  }

   /**
   * дата завершения выполнения работ по заявке
   * @return completeRequestExecutionAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-02-03 13:00:00", value = "дата завершения выполнения работ по заявке")

  public String getCompleteRequestExecutionAt() {
    return completeRequestExecutionAt;
  }


  public void setCompleteRequestExecutionAt(String completeRequestExecutionAt) {
    this.completeRequestExecutionAt = completeRequestExecutionAt;
  }


  public Request requestStatusCheckedAt(String requestStatusCheckedAt) {
    
    this.requestStatusCheckedAt = requestStatusCheckedAt;
    return this;
  }

   /**
   * дата финальной проверки выполнения
   * @return requestStatusCheckedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-02-03 13:00:00", value = "дата финальной проверки выполнения")

  public String getRequestStatusCheckedAt() {
    return requestStatusCheckedAt;
  }


  public void setRequestStatusCheckedAt(String requestStatusCheckedAt) {
    this.requestStatusCheckedAt = requestStatusCheckedAt;
  }


  public Request isModerated(Boolean isModerated) {
    
    this.isModerated = isModerated;
    return this;
  }

   /**
   * Get isModerated
   * @return isModerated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsModerated() {
    return isModerated;
  }


  public void setIsModerated(Boolean isModerated) {
    this.isModerated = isModerated;
  }


  public Request moderatorId(Long moderatorId) {
    
    this.moderatorId = moderatorId;
    return this;
  }

   /**
   * Get moderatorId
   * @return moderatorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Long getModeratorId() {
    return moderatorId;
  }


  public void setModeratorId(Long moderatorId) {
    this.moderatorId = moderatorId;
  }


  public Request deletedAt(String deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

   /**
   * Get deletedAt
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 12:00:00", value = "")

  public String getDeletedAt() {
    return deletedAt;
  }


  public void setDeletedAt(String deletedAt) {
    this.deletedAt = deletedAt;
  }


  public Request createdAt(String createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 12:00:00", value = "")

  public String getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public Request updatedAt(String updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2022-01-01 12:00:00", value = "")

  public String getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Request request = (Request) o;
    return Objects.equals(this.id, request.id) &&
        Objects.equals(this.parentRequestId, request.parentRequestId) &&
        Objects.equals(this.description, request.description) &&
        Objects.equals(this.problemCategories, request.problemCategories) &&
        Objects.equals(this.location, request.location) &&
        Objects.equals(this.latitude, request.latitude) &&
        Objects.equals(this.longitude, request.longitude) &&
        Objects.equals(this.baseRating, request.baseRating) &&
        Objects.equals(this.rating, request.rating) &&
        Objects.equals(this.status, request.status) &&
        Objects.equals(this.attachments, request.attachments) &&
        Objects.equals(this.storedProfileData, request.storedProfileData) &&
        Objects.equals(this.requestConsiderationAt, request.requestConsiderationAt) &&
        Objects.equals(this.beginRequestExecutionAt, request.beginRequestExecutionAt) &&
        Objects.equals(this.completeRequestExecutionAt, request.completeRequestExecutionAt) &&
        Objects.equals(this.requestStatusCheckedAt, request.requestStatusCheckedAt) &&
        Objects.equals(this.isModerated, request.isModerated) &&
        Objects.equals(this.moderatorId, request.moderatorId) &&
        Objects.equals(this.deletedAt, request.deletedAt) &&
        Objects.equals(this.createdAt, request.createdAt) &&
        Objects.equals(this.updatedAt, request.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, parentRequestId, description, problemCategories, location, latitude, longitude, baseRating, rating, status, attachments, storedProfileData, requestConsiderationAt, beginRequestExecutionAt, completeRequestExecutionAt, requestStatusCheckedAt, isModerated, moderatorId, deletedAt, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Request {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parentRequestId: ").append(toIndentedString(parentRequestId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    problemCategories: ").append(toIndentedString(problemCategories)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    baseRating: ").append(toIndentedString(baseRating)).append("\n");
    sb.append("    rating: ").append(toIndentedString(rating)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    storedProfileData: ").append(toIndentedString(storedProfileData)).append("\n");
    sb.append("    requestConsiderationAt: ").append(toIndentedString(requestConsiderationAt)).append("\n");
    sb.append("    beginRequestExecutionAt: ").append(toIndentedString(beginRequestExecutionAt)).append("\n");
    sb.append("    completeRequestExecutionAt: ").append(toIndentedString(completeRequestExecutionAt)).append("\n");
    sb.append("    requestStatusCheckedAt: ").append(toIndentedString(requestStatusCheckedAt)).append("\n");
    sb.append("    isModerated: ").append(toIndentedString(isModerated)).append("\n");
    sb.append("    moderatorId: ").append(toIndentedString(moderatorId)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

