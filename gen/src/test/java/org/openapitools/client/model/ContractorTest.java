/*
 * API системы \"Народный контроль\"
 *  <h2>Приложение Народный контроль</h2> <p><strong>Основная цель</strong>: контроль за состоянием сфер жизнедеятельности города по отраслям:</p> <ul> <li>общественный транспорт (мин.транс)</li> <li>состояние дорог и прилегающий территорий (мин.транс)</li> <li>состояние благоустройства города (мин. хоз)</li> <li>аварийные участки города, прорывы водо- тепло- коммуникаций, обрывы электро коммуникаций  (жэк)</li> <li>постройки в аварийном состоянии (мин. Хоз)</li> <li>уборка территории и вывоз отходов (мин. Хоз)</li> <li>некачественные товары (потреб контроль)</li> <li>скопление животных (мин. Хоз)</li> <li>последствия стихийных бедствий  (мин. Хоз,  мчс)</li> <li>последствие военных действий (мчс, военные, мин. Транс)</li> <li>проявления вандализмам (в т.ч. размещение рекламы в неположенном месте)</li> <li>состояние фортификационных сооружений (мчс)</li> <li>состояние рабочего места (проф. Комиссии)</li> <li>регулярное скопление криминальных (или асоциальных) элементов общества или проявление аморального поведения в общественных местах (мин. Хоз)</li> <li>нарушение ПДД участниками дорожного движения (мвд)</li> <li>также могут быть заявки без категории</li> <li>инициативы граждан - полезные нововведения от граждан</li> <li>заявки на утерянные или найденные вещи</li> </ul> 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: exxxar@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ContractorSchedule;
import org.openapitools.client.model.ProblemCategory;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Contractor
 */
public class ContractorTest {
    private final Contractor model = new Contractor();

    /**
     * Model tests for Contractor
     */
    @Test
    public void testContractor() {
        // TODO: test Contractor
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'mnemonicName'
     */
    @Test
    public void mnemonicNameTest() {
        // TODO: test mnemonicName
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'responsiblePerson'
     */
    @Test
    public void responsiblePersonTest() {
        // TODO: test responsiblePerson
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'hashTag'
     */
    @Test
    public void hashTagTest() {
        // TODO: test hashTag
    }

    /**
     * Test the property 'contactPhone'
     */
    @Test
    public void contactPhoneTest() {
        // TODO: test contactPhone
    }

    /**
     * Test the property 'contactEmail'
     */
    @Test
    public void contactEmailTest() {
        // TODO: test contactEmail
    }

    /**
     * Test the property 'preControllerEmail'
     */
    @Test
    public void preControllerEmailTest() {
        // TODO: test preControllerEmail
    }

    /**
     * Test the property 'telegramChatId'
     */
    @Test
    public void telegramChatIdTest() {
        // TODO: test telegramChatId
    }

    /**
     * Test the property 'publicWebsite'
     */
    @Test
    public void publicWebsiteTest() {
        // TODO: test publicWebsite
    }

    /**
     * Test the property 'moreInfo'
     */
    @Test
    public void moreInfoTest() {
        // TODO: test moreInfo
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'problemCategories'
     */
    @Test
    public void problemCategoriesTest() {
        // TODO: test problemCategories
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'generateDailyReport'
     */
    @Test
    public void generateDailyReportTest() {
        // TODO: test generateDailyReport
    }

    /**
     * Test the property 'needInformByEmail'
     */
    @Test
    public void needInformByEmailTest() {
        // TODO: test needInformByEmail
    }

    /**
     * Test the property 'needInformBySms'
     */
    @Test
    public void needInformBySmsTest() {
        // TODO: test needInformBySms
    }

    /**
     * Test the property 'deletedAt'
     */
    @Test
    public void deletedAtTest() {
        // TODO: test deletedAt
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
